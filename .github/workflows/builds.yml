---
name: Static build

on: ["push"]

permissions:
  contents: read

jobs:
  WindowsBuild:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v4
    - uses: ilammy/msvc-dev-cmd@v1
    - uses: shogo82148/actions-setup-perl@v1
    - name: prepare the build directory
      run: mkdir _build
    - name: config
      working-directory: _build
      run: |
        perl ..\Configure --prefix=$env:PREFIX --openssldir=$env:PREFIX no-makedepend no-shared no-deprecated no-asm no-tests -DOPENSSL_SMALL_FOOTPRINT VC-WIN64A
        perl configdata.pm --dump
      env:
        PREFIX: ${{ github.workspace }}/dist
    - name: build
      working-directory: _build
      run: |
        nmake
        nmake install_sw
    - uses: actions/upload-artifact@v3
      with:
        name: windows-x64
        path: dist

  LinuxBuild:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: prepare the build directory
      run: mkdir _build
    - name: config
      working-directory: _build
      run: ../config --prefix=$PREFIX --openssldir=$PREFIX no-makedepend no-shared no-deprecated no-asm no-tests -DOPENSSL_SMALL_FOOTPRINT -fPIC
      env:
        PREFIX: ${{ github.workspace }}/dist
    - name: build
      working-directory: _build
      run: |
        make -j`nproc`
        make install_sw
    - uses: actions/upload-artifact@v3
      with:
        name: linux-x86_64
        path: dist
  
  Mac_x86_64:
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v4
    - name: prepare the build directory
      run: mkdir _build
    - name: config
      working-directory: _build
      run: |
        ../Configure --prefix=$PREFIX --openssldir=$PREFIX no-makedepend no-shared no-deprecated no-asm no-tests -DOPENSSL_SMALL_FOOTPRINT -fPIC darwin64-x86_64-cc
      env:
        PREFIX: ${{ github.workspace }}/dist
    - name: build
      working-directory: _build
      run: |
        make -j`nproc`
        make install_sw

    - uses: actions/upload-artifact@v3
      with:
        name: macos-x86_64
        path: dist

  Mac_arm64:
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v4
    - name: prepare the build directory
      run: mkdir _build
    - name: config
      working-directory: _build
      run: |
        ../Configure --prefix=$PREFIX --openssldir=$PREFIX no-makedepend no-shared no-deprecated no-asm no-tests -DOPENSSL_SMALL_FOOTPRINT -fPIC darwin64-arm64-cc
      env:
        PREFIX: ${{ github.workspace }}/dist
    - name: build
      working-directory: _build
      run: |
        make -j`nproc`
        make install_sw

    - uses: actions/upload-artifact@v3
      with:
        name: macos-arm64
        path: dist

  MacUniversal2:
    runs-on: macos-12

    needs:
      - Mac_x86_64
      - Mac_arm64
    steps:
      - name: Get x86_64 build
        uses: actions/download-artifact@v3
        with:
          name: macos-x86_64
          path: macos-x86_64

      - name: Get arm64 build
        uses: actions/download-artifact@v3
        with:
          name: macos-arm64
          path: macos-arm64
          
      - name: compine libraries
        run: |
          ls -R
          mkdir -p macos-universal2/lib
          cp -r macos-x86_64/include macos-universal2/include
          lipo -create macos-arm64/lib/libcrypto.a macos-x86_64/lib/libcrypto.a -output macos-universal2/libcrypto.a
          lipo -create macos-arm64/lib/libssl.a macos-x86_64/lib/libssl.a -output macos-universal2/libssl.a

          file macos-x86_64/lib/libcrypto.a macos-arm64/lib/libcrypto.a macos-universal2/libcrypto.a
          file macos-arm64/lib/libssl.a macos-x86_64/lib/libssl.a macos-universal2/libssl.a

      - uses: actions/upload-artifact@v3
        with:
          name: macos-universal2
          path: macos-universal2

  BuildRelease:
    name: Package Builds
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - WindowsBuild
      - LinuxBuild
      - MacUniversal2
    steps:
      - name: Gather all build artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Display structure of gathered artifacts
        run: ls -R
        working-directory: artifacts
      - run: |
          zip -r ../../macos-universal2.zip lib include
        working-directory: artifacts/macos-universal2
      - run: |
          zip -r ../../windows-x64.zip lib include
        working-directory: artifacts/windows-x64
      - run: |
          zip -r ../../linux-x86_64.zip lib include
        working-directory: artifacts/linux-x86_64
      - uses: ncipollo/release-action@v1
        with:
          name: ${{ github.run_number }}
          tag: ${{ github.run_number }}
          commit: ${{ github.sha }}
          body: "Static libs for building into dynamic libraries"
          artifacts: "linux-x86_64.zip,windows-x64.zip,macos-universal2.zip"